$date
	Fri May 12 10:55:57 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module alu_tb $end
$var wire 1 ! zero $end
$var wire 16 " z [15:0] $end
$var wire 1 # sign $end
$var wire 1 $ parity $end
$var wire 1 % overflow $end
$var wire 1 & carry $end
$var reg 16 ' x [15:0] $end
$var reg 16 ( y [15:0] $end
$scope module DUT $end
$var wire 1 % overflow $end
$var wire 16 ) x [15:0] $end
$var wire 16 * y [15:0] $end
$var wire 1 ! zero $end
$var wire 16 + z [15:0] $end
$var wire 1 # sign $end
$var wire 1 $ parity $end
$var wire 1 & carry $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx +
bx *
bx )
bx (
bx '
x&
x%
x$
x#
bx "
x!
$end
#50
1%
0#
0!
1$
b111111111111 "
b111111111111 +
1&
b1000000000000000 (
b1000000000000000 *
b1000111111111111 '
b1000111111111111 )
#100
0%
1!
b0 "
b0 +
b10 (
b10 *
b1111111111111110 '
b1111111111111110 )
#150
1#
0!
b1111111111111111 "
b1111111111111111 +
0&
b101010101010101 (
b101010101010101 *
b1010101010101010 '
b1010101010101010 )
#200
